buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.springframework.boot" version "${springBootVersion}"
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    implementation("com.h2database:h2:${h2DatabaseVersion}")
    implementation("org.postgresql:postgresql:${postgreSqlVersion}")
    implementation("com.google.guava:guava:${guavaVersion}")
    implementation("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testImplementation("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
}


test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }
}

tasks.withType(org.springframework.boot.gradle.tasks.run.BootRun) {
    systemProperty 'spring.profiles.active', System.getProperty('spring.profiles.active', 'default')
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier = ''
}



springBoot {
    mainClass = 'fi.vrk.xroad.catalog.persistence.Application'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

