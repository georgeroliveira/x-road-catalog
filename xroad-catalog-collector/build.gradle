plugins {
    alias (libs.plugins.spring.boot)
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'jacoco'
}

group 'fi.vrk.xroad.catalog.collector'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

configurations {
    wsimport
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java', 'build/generated-sources/wsimport']
    }
}

bootJar {
    enabled = true
    layered {
        enabled = false
    }
}

jar {
    enabled = false
}

springBoot {
    mainClass = 'fi.vrk.xroad.catalog.collector.XRoadCatalogCollector'
}

task wsImport {
    ext.sourcedestdir = "${buildDir}/generated-sources/wsimport"
    ext.destdir = "${buildDir}/generated-classes/wsimport"
    ext.wsdl = "${projectDir}/src/main/resources/schema/metaservices.wsdl"

    inputs.files wsdl
    outputs.dir sourcedestdir

    doLast() {
        project.ant {
            taskdef name: "wsimport", classname: "com.sun.tools.ws.ant.WsImport",
                    classpath: configurations.wsimport.asPath
            mkdir(dir: destdir)
            mkdir(dir: sourcedestdir)

            wsimport(sourcedestdir: sourcedestdir,
                    destdir: destdir,
                    wsdl: wsdl,
                    wsdllocation: "/schema/metaservices.wsdl",
                    package: "fi.vrk.xroad.catalog.collector.wsimport",
                    keep: "true"
            ) {
                produces(dir: sourcedestdir, includes: "**/*.java")
            }
        }
    }
}

dependencies {
    implementation project(':xroad-catalog-persistence')
    implementation (libs.javax.annotation)
    implementation (libs.javax.jaxb)
    implementation (libs.guava)
    implementation (libs.http.client)
    implementation (libs.json)
    implementation (libs.spring.boot.ws)
    implementation (libs.jackson)
    implementation (libs.bundles.akka)
    // Note that bundle seems to break something with CXF and being able top find api bindings, so using separate dependencies here
    implementation (libs.cxf.jaxws)
    implementation (libs.cxf.transport)
    implementation (libs.cxf.core)
    implementation (libs.lombok)
    annotationProcessor (libs.lombok)
    wsimport (libs.jaxb.maven)
    implementation (libs.bundles.jaxb)
    testImplementation (libs.spring.boot.test) {
        exclude group: 'org.mockito', module :'mockito-core'
    }
    testImplementation (libs.mockito.inline)
    testImplementation (libs.akka.testkit)
    testImplementation (libs.lombok)
    testAnnotationProcessor (libs.lombok)
    testImplementation (libs.javax.annotation)
    testImplementation (libs.javax.jaxb)
}

compileJava.dependsOn wsImport

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }
    systemProperty 'spring.config.name', 'collector,catalogdb'
    finalizedBy jacocoTestReport
}

bootRun {
    systemProperty 'spring.config.name', 'collector,catalogdb'
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/wsimport/*"
            ])
        }))
    }
    reports {
        xml.required = true
    }
}
